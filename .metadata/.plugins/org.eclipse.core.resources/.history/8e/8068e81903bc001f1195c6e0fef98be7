package com.synopsis.capacitacion.transactions.controller;

import java.time.Duration;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.reactive.function.client.WebClient;

import com.synopsis.capacitacion.transactions.entity.Transactions;
import com.synopsis.capacitacion.transactions.repository.TransactionsRepository;

import io.netty.channel.ChannelOption;
import io.netty.channel.epoll.EpollChannelOption;
import io.netty.handler.timeout.ReadTimeoutHandler;
import io.netty.handler.timeout.WriteTimeoutHandler;
import reactor.netty.http.client.HttpClient;

@RestController
@RequestMapping("/transactions")
public class TransactionsController {

	@Autowired
	TransactionsRepository repositorio;
	
	@GetMapping()
	public List<Transactions> list() {
		return repositorio.findAllTransactions();
	}
	@GetMapping("/buscar")
	public List<Transactions> getTransactionsByAccountIban(String accountIban) {
	    return repositorio.findByAccountIban(accountIban);
	}
	@GetMapping("/{id}")
	public Transactions get(@PathVariable long id) {
		return repositorio.findById(id).get();
	}

}
